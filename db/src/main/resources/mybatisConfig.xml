<!DOCTYPE configuration
		PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-config.dtd">
<!--mybatis主配置文件-->
<configuration>
	<!--    配置环境-->
	<!--    对domain里面的类起别名-->
	<typeAliases>
		<!--        用于指定要配置别名的包，当指定以后，该包下面的实体类都会注册别名，并且类名就是别名，不区分大小写,使用的时候是在映射配置文件中使用-->
		<package name="domain"/>
	</typeAliases>
	<!--    default值要和下面的id值相同-->
	<environments default="mysql">
		<environment id="mysql">
			<!--            配置事务类型-->
			<transactionManager type="jdbc"/>
			<dataSource type="POOLED">
				<!--                配置数据库的四个基本信息-->
				<property name="driver" value="com.mysql.cj.jdbc.Driver"/>
				<!--                我用的是MySQL8.0.19社区版，不同的版本，连接语句不一样-->
				<property name="url" value="jdbc:mysql://172.18.13.173:3306/dev_jibiandang?useUnicode=true&amp;zeroDateTimeBehavior=convertToNull"/>
				<property name="username" value="dev_jibiandang"/>
				<property name="password" value="dev_jibiandang@123456"/>
			</dataSource>
		</environment>
	</environments>


	<mappers >
		<!--
            使用配置文件来完成操作
            指定映射配置文件的位置，映射配置文件指的是每个dao独立的配置文件
            <mapper resource="xml/IAddressDao.xml"/>
        -->

		<!--
            如果使用注解来配置的话，此处应该使用class属性指定被注解的dao的全限定类名
            mybatis的映射配置文件位置必须和dao接口的包结构相同
            <mapper class="dao.IAddressDao"/>

            还要在IAddressDao接口里面findall方法上面加上@select注解
            public interface IAddressDao {
                @Select("select * from address")
                List<Address> findAll();
            }
        -->
		<!--
            package标签用于指定dao接口所在的包，当指定以后就不用再写mapper以及resource或者class了
            mybatis的映射配置文件位置必须和dao接口的包结构相同
        -->
		<package name="dao"/>
	</mappers>
</configuration>